package db

import (
	"context"
	"github.com/jackc/pgx/v5/pgxpool"
	"github.com/rs/zerolog/log"
	"golinks/internal/db/sqlc"
)

// Queries join generated by sqlc and custom methods
type Queries struct {
	*sqlc.Queries
	pool *pgxpool.Pool
}

var pool *pgxpool.Pool // fixme
var Q *Queries         // fixme

func init() {
	pool = initPool()
	Q = NewQueries()
}

func NewQueries() *Queries {
	return &Queries{
		Queries: sqlc.New(pool), // fixme
		pool:    pool,
	}
}

func ClosePool() {
	pool.Close()
}

func initPool() *pgxpool.Pool {
	dsn := "postgres://golinks:golinks@localhost:5432/golinks"
	pool, err := pgxpool.New(context.Background(), dsn) // fixme
	if err != nil {
		log.Error().Msgf("Failed to create test connection pool: %s", err)
	}

	return pool
}
